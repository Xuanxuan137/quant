#mnist
#%0=input(shape=(1,1,28,28));
#%1=nn.conv2d(input=%0, weight=output/layer_1_weight.bin, bias=output/layer_1_bias.bin, output_channel=16, input_channel=1, kernel_size=(3,3), stride=(1,1), padding=(1,1), dilation=(1,1));
#%2=nn.relu(input=%1);
#%3=nn.maxpool2d(input=%2, kernel_size=(2,2), stride=(2,2), padding=(0,0), dilation=(1,1));
#%4=nn.conv2d(input=%3, weight=output/layer_4_weight.bin, bias=output/layer_4_bias.bin, output_channel=32, input_channel=16, kernel_size=(3,3), stride=(1,1), padding=(1,1), dilation=(1,1));
#%5=nn.relu(input=%4);
#%6=nn.maxpool2d(input=%5, kernel_size=(2,2), stride=(2,2), padding=(0,0), dilation=(1,1));
#%7=nn.conv2d(input=%6, weight=output/layer_7_weight.bin, bias=output/layer_7_bias.bin, output_channel=64, input_channel=32, kernel_size=(3,3), stride=(1,1), padding=(1,1), dilation=(1,1));
#%8=nn.relu(input=%7);
#%9=nn.flatten(input=%8);
#%10=nn.dense(input=%9, weight=output/layer_10_weight.bin, bias=output/layer_10_bias.bin, output_channel=10, input_channel=3136);
#%11=output(input=%10);



#cifar10
#%0=input(shape=(1,3,32,32));
#%1=nn.conv2d(input=%0, weight=output/layer_1_weight.bin, bias=output/layer_1_bias.bin, output_channel=16, input_channel=3, kernel_size=(3,3), stride=(1,1), padding=(1,1), dilation=(1,1));
#%2=nn.relu(input=%1);
#%3=nn.conv2d(input=%2, weight=output/layer_3_weight.bin, bias=output/layer_3_bias.bin, output_channel=16, input_channel=16, kernel_size=(3,3), stride=(1,1), padding=(1,1), dilation=(1,1));
#%4=nn.relu(input=%3);
#%5=nn.maxpool2d(input=%4, kernel_size=(2,2), stride=(2,2), padding=(0,0), dilation=(1,1));
#%6=nn.conv2d(input=%5, weight=output/layer_6_weight.bin, bias=output/layer_6_bias.bin, output_channel=32, input_channel=16, kernel_size=(3,3), stride=(1,1), padding=(1,1), dilation=(1,1));
#%7=nn.relu(input=%6);
#%8=nn.conv2d(input=%7, weight=output/layer_8_weight.bin, bias=output/layer_8_bias.bin, output_channel=32, input_channel=32, kernel_size=(3,3), stride=(1,1), padding=(1,1), dilation=(1,1));
#%9=nn.relu(input=%8);
#%10=nn.maxpool2d(input=%9, kernel_size=(2,2), stride=(2,2), padding=(0,0), dilation=(1,1));
#%11=nn.conv2d(input=%10, weight=output/layer_11_weight.bin, bias=output/layer_11_bias.bin, output_channel=64, input_channel=32, kernel_size=(3,3), stride=(1,1), padding=(1,1), dilation=(1,1));
#%12=nn.relu(input=%11);
#%13=nn.conv2d(input=%12, weight=output/layer_13_weight.bin, bias=output/layer_13_bias.bin, output_channel=64, input_channel=64, kernel_size=(3,3), stride=(1,1), padding=(1,1), dilation=(1,1));
#%14=nn.relu(input=%13);
#%15=nn.flatten(input=%14);
#%16=nn.dense(input=%15, weight=output/layer_16_weight.bin, bias=output/layer_16_bias.bin, output_channel=10, input_channel=4096);
#%17=output(input=%16);


# resnet18
%0=input(shape=(1,3,224,224));
%1=nn.conv2d(input=%0, weight=output/layer_1_weight.bin, bias=None, output_channel=64, input_channel=3, kernel_size=(7,7), stride=(2,2), padding=(3,3), dilation=(1,1));
%2=nn.batch_norm2d(input=%1, weight=output/layer_2_weight.bin, bias=output/layer_2_bias.bin, running_mean=output/layer_2_running_mean.bin, running_var=output/layer_2_running_var.bin, num_features=64, eps=0.000010, momentum=0.100000);
%3=nn.relu(input=%2);
%4=nn.maxpool2d(input=%3, kernel_size=(3,3), stride=(2,2), padding=(1,1), dilation=(1,1));
%5=nn.conv2d(input=%4, weight=output/layer_5_weight.bin, bias=None, output_channel=64, input_channel=64, kernel_size=(3,3), stride=(1,1), padding=(1,1), dilation=(1,1));
%6=nn.batch_norm2d(input=%5, weight=output/layer_6_weight.bin, bias=output/layer_6_bias.bin, running_mean=output/layer_6_running_mean.bin, running_var=output/layer_6_running_var.bin, num_features=64, eps=0.000010, momentum=0.100000);
%7=nn.relu(input=%6);
%8=nn.conv2d(input=%7, weight=output/layer_8_weight.bin, bias=None, output_channel=64, input_channel=64, kernel_size=(3,3), stride=(1,1), padding=(1,1), dilation=(1,1));
%9=nn.batch_norm2d(input=%8, weight=output/layer_9_weight.bin, bias=output/layer_9_bias.bin, running_mean=output/layer_9_running_mean.bin, running_var=output/layer_9_running_var.bin, num_features=64, eps=0.000010, momentum=0.100000);
%10=add(input1=%9, input2=%4);
%11=nn.relu(input=%10);
%12=nn.conv2d(input=%11, weight=output/layer_12_weight.bin, bias=None, output_channel=64, input_channel=64, kernel_size=(3,3), stride=(1,1), padding=(1,1), dilation=(1,1));
%13=nn.batch_norm2d(input=%12, weight=output/layer_13_weight.bin, bias=output/layer_13_bias.bin, running_mean=output/layer_13_running_mean.bin, running_var=output/layer_13_running_var.bin, num_features=64, eps=0.000010, momentum=0.100000);
%14=nn.relu(input=%13);
%15=nn.conv2d(input=%14, weight=output/layer_15_weight.bin, bias=None, output_channel=64, input_channel=64, kernel_size=(3,3), stride=(1,1), padding=(1,1), dilation=(1,1));
%16=nn.batch_norm2d(input=%15, weight=output/layer_16_weight.bin, bias=output/layer_16_bias.bin, running_mean=output/layer_16_running_mean.bin, running_var=output/layer_16_running_var.bin, num_features=64, eps=0.000010, momentum=0.100000);
%17=add(input1=%16, input2=%11);
%18=nn.relu(input=%17);
%19=nn.conv2d(input=%18, weight=output/layer_19_weight.bin, bias=None, output_channel=128, input_channel=64, kernel_size=(3,3), stride=(2,2), padding=(1,1), dilation=(1,1));
%20=nn.batch_norm2d(input=%19, weight=output/layer_20_weight.bin, bias=output/layer_20_bias.bin, running_mean=output/layer_20_running_mean.bin, running_var=output/layer_20_running_var.bin, num_features=128, eps=0.000010, momentum=0.100000);
%21=nn.relu(input=%20);
%22=nn.conv2d(input=%21, weight=output/layer_22_weight.bin, bias=None, output_channel=128, input_channel=128, kernel_size=(3,3), stride=(1,1), padding=(1,1), dilation=(1,1));
%23=nn.batch_norm2d(input=%22, weight=output/layer_23_weight.bin, bias=output/layer_23_bias.bin, running_mean=output/layer_23_running_mean.bin, running_var=output/layer_23_running_var.bin, num_features=128, eps=0.000010, momentum=0.100000);
%24=nn.conv2d(input=%18, weight=output/layer_24_weight.bin, bias=None, output_channel=128, input_channel=64, kernel_size=(1,1), stride=(2,2), padding=(0,0), dilation=(1,1));
%25=nn.batch_norm2d(input=%24, weight=output/layer_25_weight.bin, bias=output/layer_25_bias.bin, running_mean=output/layer_25_running_mean.bin, running_var=output/layer_25_running_var.bin, num_features=128, eps=0.000010, momentum=0.100000);
%26=add(input1=%23, input2=%25);
%27=nn.relu(input=%26);
%28=nn.conv2d(input=%27, weight=output/layer_28_weight.bin, bias=None, output_channel=128, input_channel=128, kernel_size=(3,3), stride=(1,1), padding=(1,1), dilation=(1,1));
%29=nn.batch_norm2d(input=%28, weight=output/layer_29_weight.bin, bias=output/layer_29_bias.bin, running_mean=output/layer_29_running_mean.bin, running_var=output/layer_29_running_var.bin, num_features=128, eps=0.000010, momentum=0.100000);
%30=nn.relu(input=%29);
%31=nn.conv2d(input=%30, weight=output/layer_31_weight.bin, bias=None, output_channel=128, input_channel=128, kernel_size=(3,3), stride=(1,1), padding=(1,1), dilation=(1,1));
%32=nn.batch_norm2d(input=%31, weight=output/layer_32_weight.bin, bias=output/layer_32_bias.bin, running_mean=output/layer_32_running_mean.bin, running_var=output/layer_32_running_var.bin, num_features=128, eps=0.000010, momentum=0.100000);
%33=add(input1=%32, input2=%27);
%34=nn.relu(input=%33);
%35=nn.conv2d(input=%34, weight=output/layer_35_weight.bin, bias=None, output_channel=256, input_channel=128, kernel_size=(3,3), stride=(2,2), padding=(1,1), dilation=(1,1));
%36=nn.batch_norm2d(input=%35, weight=output/layer_36_weight.bin, bias=output/layer_36_bias.bin, running_mean=output/layer_36_running_mean.bin, running_var=output/layer_36_running_var.bin, num_features=256, eps=0.000010, momentum=0.100000);
%37=nn.relu(input=%36);
%38=nn.conv2d(input=%37, weight=output/layer_38_weight.bin, bias=None, output_channel=256, input_channel=256, kernel_size=(3,3), stride=(1,1), padding=(1,1), dilation=(1,1));
%39=nn.batch_norm2d(input=%38, weight=output/layer_39_weight.bin, bias=output/layer_39_bias.bin, running_mean=output/layer_39_running_mean.bin, running_var=output/layer_39_running_var.bin, num_features=256, eps=0.000010, momentum=0.100000);
%40=nn.conv2d(input=%34, weight=output/layer_40_weight.bin, bias=None, output_channel=256, input_channel=128, kernel_size=(1,1), stride=(2,2), padding=(0,0), dilation=(1,1));
%41=nn.batch_norm2d(input=%40, weight=output/layer_41_weight.bin, bias=output/layer_41_bias.bin, running_mean=output/layer_41_running_mean.bin, running_var=output/layer_41_running_var.bin, num_features=256, eps=0.000010, momentum=0.100000);
%42=add(input1=%39, input2=%41);
%43=nn.relu(input=%42);
%44=nn.conv2d(input=%43, weight=output/layer_44_weight.bin, bias=None, output_channel=256, input_channel=256, kernel_size=(3,3), stride=(1,1), padding=(1,1), dilation=(1,1));
%45=nn.batch_norm2d(input=%44, weight=output/layer_45_weight.bin, bias=output/layer_45_bias.bin, running_mean=output/layer_45_running_mean.bin, running_var=output/layer_45_running_var.bin, num_features=256, eps=0.000010, momentum=0.100000);
%46=nn.relu(input=%45);
%47=nn.conv2d(input=%46, weight=output/layer_47_weight.bin, bias=None, output_channel=256, input_channel=256, kernel_size=(3,3), stride=(1,1), padding=(1,1), dilation=(1,1));
%48=nn.batch_norm2d(input=%47, weight=output/layer_48_weight.bin, bias=output/layer_48_bias.bin, running_mean=output/layer_48_running_mean.bin, running_var=output/layer_48_running_var.bin, num_features=256, eps=0.000010, momentum=0.100000);
%49=add(input1=%48, input2=%43);
%50=nn.relu(input=%49);
%51=nn.conv2d(input=%50, weight=output/layer_51_weight.bin, bias=None, output_channel=512, input_channel=256, kernel_size=(3,3), stride=(2,2), padding=(1,1), dilation=(1,1));
%52=nn.batch_norm2d(input=%51, weight=output/layer_52_weight.bin, bias=output/layer_52_bias.bin, running_mean=output/layer_52_running_mean.bin, running_var=output/layer_52_running_var.bin, num_features=512, eps=0.000010, momentum=0.100000);
%53=nn.relu(input=%52);
%54=nn.conv2d(input=%53, weight=output/layer_54_weight.bin, bias=None, output_channel=512, input_channel=512, kernel_size=(3,3), stride=(1,1), padding=(1,1), dilation=(1,1));
%55=nn.batch_norm2d(input=%54, weight=output/layer_55_weight.bin, bias=output/layer_55_bias.bin, running_mean=output/layer_55_running_mean.bin, running_var=output/layer_55_running_var.bin, num_features=512, eps=0.000010, momentum=0.100000);
%56=nn.conv2d(input=%50, weight=output/layer_56_weight.bin, bias=None, output_channel=512, input_channel=256, kernel_size=(1,1), stride=(2,2), padding=(0,0), dilation=(1,1));
%57=nn.batch_norm2d(input=%56, weight=output/layer_57_weight.bin, bias=output/layer_57_bias.bin, running_mean=output/layer_57_running_mean.bin, running_var=output/layer_57_running_var.bin, num_features=512, eps=0.000010, momentum=0.100000);
%58=add(input1=%55, input2=%57);
%59=nn.relu(input=%58);
%60=nn.conv2d(input=%59, weight=output/layer_60_weight.bin, bias=None, output_channel=512, input_channel=512, kernel_size=(3,3), stride=(1,1), padding=(1,1), dilation=(1,1));
%61=nn.batch_norm2d(input=%60, weight=output/layer_61_weight.bin, bias=output/layer_61_bias.bin, running_mean=output/layer_61_running_mean.bin, running_var=output/layer_61_running_var.bin, num_features=512, eps=0.000010, momentum=0.100000);
%62=nn.relu(input=%61);
%63=nn.conv2d(input=%62, weight=output/layer_63_weight.bin, bias=None, output_channel=512, input_channel=512, kernel_size=(3,3), stride=(1,1), padding=(1,1), dilation=(1,1));
%64=nn.batch_norm2d(input=%63, weight=output/layer_64_weight.bin, bias=output/layer_64_bias.bin, running_mean=output/layer_64_running_mean.bin, running_var=output/layer_64_running_var.bin, num_features=512, eps=0.000010, momentum=0.100000);
%65=add(input1=%64, input2=%59);
%66=nn.relu(input=%65);
%67=nn.avgpool2d(input=%66, kernel_size=(7,7), stride=(7,7), padding=(0,0));
%68=nn.flatten(input=%67);
%69=nn.dense(input=%68, weight=output/layer_69_weight.bin, bias=output/layer_69_bias.bin, output_channel=1000, input_channel=512);
%70=output(input=%69);